
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model IgUser {
  id              String   @id @default(cuid())
  igUserId        BigInt   @unique                // IG business/creator user id
  username        String?
  name            String?
  profilePictureUrl String?
  accountType     String?
  accessToken     String                          // encrypted token
  tokenExpireDay  DateTime                        //IG Token Expire Date      
  tokenCreatedAt  DateTime  
  tokenExpireIn   Int
  permissions     String[]   
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  rules           Automation[]
}


model Automation {
  id                String   @id @default(cuid())
  igUserId          BigInt
  name              String
  mediaId           String                                // Post/Reel id
  rule              Json                                  // Processed automation rule (trigger + actions)
  status            AutomationStatus @default(DRAFT)      // DRAFT, ACTIVE, PAUSED, ARCHIVED
  isActive          Boolean  @default(false)              // Quick active/inactive toggle
  lastExecutedAt    DateTime?                             // When automation last ran
  executionCount    Int      @default(0)                  // How many times it has executed
  errorCount        Int      @default(0)                  // Error tracking
  lastErrorAt       DateTime?                             // Last error timestamp
  lastErrorMessage  String?                               // Last error message
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Relations
  account    IgUser   @relation(fields: [igUserId], references: [igUserId])
}




enum AutomationStatus {
  DRAFT     // Being created/edited
  ACTIVE    // Running and processing
  PAUSED    // Temporarily stopped
  ARCHIVED  // Deleted but kept for history
}